# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import car_preferences_pb2 as car__preferences__pb2

GRPC_GENERATED_VERSION = '1.67.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in car_preferences_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class CarPreferencesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPreferences = channel.unary_stream(
            '/car_preferences.CarPreferences/GetPreferences',
            request_serializer=car__preferences__pb2.GetPreferencesReq.SerializeToString,
            response_deserializer=car__preferences__pb2.GetPreferencesResp.FromString,
            _registered_method=True)
        self.UpdatePreferences = channel.unary_stream(
            '/car_preferences.CarPreferences/UpdatePreferences',
            request_serializer=car__preferences__pb2.UpdatePreferencesReq.SerializeToString,
            response_deserializer=car__preferences__pb2.UpdatePreferencesResp.FromString,
            _registered_method=True)


class CarPreferencesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPreferences(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePreferences(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CarPreferencesServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetPreferences': grpc.unary_stream_rpc_method_handler(
            servicer.GetPreferences,
            request_deserializer=car__preferences__pb2.GetPreferencesReq.FromString,
            response_serializer=car__preferences__pb2.GetPreferencesResp.SerializeToString,
        ),
        'UpdatePreferences': grpc.unary_stream_rpc_method_handler(
            servicer.UpdatePreferences,
            request_deserializer=car__preferences__pb2.UpdatePreferencesReq.FromString,
            response_serializer=car__preferences__pb2.UpdatePreferencesResp.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'car_preferences.CarPreferences', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('car_preferences.CarPreferences', rpc_method_handlers)

 # This class is part of an EXPERIMENTAL API.


class CarPreferences(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPreferences(request,
                       target,
                       options=(),
                       channel_credentials=None,
                       call_credentials=None,
                       insecure=False,
                       compression=None,
                       wait_for_ready=None,
                       timeout=None,
                       metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/car_preferences.CarPreferences/GetPreferences',
            car__preferences__pb2.GetPreferencesReq.SerializeToString,
            car__preferences__pb2.GetPreferencesResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePreferences(request,
                          target,
                          options=(),
                          channel_credentials=None,
                          call_credentials=None,
                          insecure=False,
                          compression=None,
                          wait_for_ready=None,
                          timeout=None,
                          metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/car_preferences.CarPreferences/UpdatePreferences',
            car__preferences__pb2.UpdatePreferencesReq.SerializeToString,
            car__preferences__pb2.UpdatePreferencesResp.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
